---
- name: ensure known hosts
  shell: mkdir ~/.ssh; touch ~/.ssh/known_hosts
  tags: [config]

- name: remove github.com from known host
  shell: ssh-keygen -R github.com
  tags: [config]

- name: ensure github.com in known host
  shell: ssh-keyscan -H github.com > ~/.ssh/known_hosts
  tags: [config]

- name: mapstory checkout
  git: repo=git://github.com/MapStory/mapstory.git dest={{ top_project }}
  tags: [git]

- name: mapstory branch
  command: git checkout {{ mapstory_branch }} chdir={{ top_project }}
  tags: [git]

- name: mapstory update
  shell: git pull && git submodule update --init --recursive chdir={{ top_project }}
  tags: [update]

- name: setup-project
  script: files/setup.sh &> /tmp/setup-project.out
  tags: [setup]

- name: geonode static
  shell: paver static chdir={{ top_project }}/geonode
  tags: [update]

- name: compile python
  shell: '{{ venv }}/bin/python -m compileall -f {{ top_project }}/geonode -f {{ mapstory_geonode }}'
  notify: restart django
  tags: [update]

- name: mapstory secret key
  shell: python -c 'import random;print "".join(random.sample("abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)",50))'
  register: secret_key
  tags: [settings]

- name: mapstory settings
  template: src=files/local_settings.py dest={{ mapstory_geonode }}/mapstory/settings/local_settings.py
  notify: restart django
  tags: [settings]

- name: syncdb
  # would use django_manage but no way to avoid initial data?
  shell: . {{ venv_activate }} && python manage.py syncdb --no-initial-data chdir={{ mapstory_geonode }}
  tags: [update, syncdb]

- name: load initial data
  django_manage: app_path={{ mapstory_geonode }} virtualenv={{ venv }} fixtures='{{ fixtures }}' command=loaddata
  tags: [initial_data]

- name: create or update django super user
  shell: >
    PYTHONPATH=. DJANGO_SETTINGS_MODULE=mapstory.settings
    {{ venv }}/bin/python -c
    "from geonode.people.models import Profile; p,_ = Profile.objects.get_or_create(username='admin'); p.is_staff=p.is_superuser=True; p.set_password('{{django_su_pass}}'); p.save()"
    chdir={{ mapstory_geonode }}
  tags: [superuser]

- name: init maploom
  command: paver build_maploom --init chdir=/srv/git/mapstory
  tags: [setup]

- name: update maploom
  command: paver build_maploom chdir=/srv/git/mapstory
  tags: [update]

- name: collect-static
  # while we could use django_manage, this does a bit more
  shell: . {{ venv_activate }} && paver collect_static chdir={{ mapstory_geonode }}
  tags: [update]
